/***
 * Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
 *
 * You must implement a solution with a linear runtime complexity and use only constant extra space.
 *
 *
 *
 * Example 1:
 *
 * Input: nums = [2,2,1]
 * Output: 1
 * Example 2:
 *
 * Input: nums = [4,1,2,1,2]
 * Output: 4
 */

import java.util.Arrays;

public class SingleNumber_136 {
    public static int singleNumber(int[] nums) {
        Arrays.sort(nums);
        int f=0;
        for(int i=1;i<nums.length;i=i+2){
            if(nums[i]!=nums[i-1]){
                return nums[i-1];
            }
        }
        return nums[nums.length-1];
    }
    public static void main(String args[]){
        int[] nums={1,1,2,3,2};
        int ans=singleNumber(nums);
        System.out.println(ans);
    }

}
